name: Release
on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: test
    timeout-minutes: 5
    permissions:
      contents: read
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.52.0@sha256:a021500a801bab0611049217ffad6b9697d827205c15babb86a53bc1a61c02d5 # ratchet:mcr.microsoft.com/playwright:v1.52.0
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          persist-credentials: false

      - uses: ./.github/actions/deps
        name: Install
      - uses: ./.github/actions/test
        name: Test
      - uses: ./.github/actions/playwright
        name: Test e2e

  release:
    name: release
    timeout-minutes: 10
    permissions:
      id-token: write
      attestations: write
      contents: write
      packages: write
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          persist-credentials: false
          ref: main
          fetch-depth: 0

      - name: Semantic Release
        id: semrel
        uses: go-semantic-release/action@2e9dc4247a6004f8377781bef4cb9dad273a741f # ratchet:go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
          update-file: package.json
          changelog-file: CHANGELOG.md
          prepend: true

      - name: Commit changelog & package.json updates
        if: steps.semrel.outputs.version != ''
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add CHANGELOG.md package.json
          git commit -m "chore(release): ${{ steps.semrel.outputs.version }}"

      - uses: ./.github/actions/deps
        if: steps.semrel.outputs.version != ''
        name: Install

      - name: Build
        if: steps.semrel.outputs.version != ''
        env:
          NODE_ENV: "production"
        run: pnpm build

      - name: Deploy to Cloudflare Pages
        if: steps.semrel.outputs.version != ''
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # ratchet:cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy build --project-name=guitos

      - uses: ./.github/actions/docker
        if: steps.semrel.outputs.version != ''
        name: Build docker image
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compress bundle
        if: steps.semrel.outputs.version != ''
        run: mv build guitos && zip -r guitos-v${{ steps.semrel.outputs.version }}.zip guitos/*

      - name: Generate artifact attestation
        if: steps.semrel.outputs.version != ''
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # ratchet:actions/attest-build-provenance@v2
        with:
          subject-path: guitos-v${{ steps.semrel.outputs.version }}.zip

      - name: Upload bundle to GH release
        if: steps.semrel.outputs.version != ''
        run: |
          gh release upload v${{ steps.semrel.outputs.version }} guitos-v${{ steps.semrel.outputs.version }}.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push changelog & package.json updates
        if: steps.semrel.outputs.version != ''
        run: git push https://${{ secrets.SEMANTIC_RELEASE_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git main

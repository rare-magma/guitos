name: Release
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
on:
  push:
    branches:
      - main
jobs:
  test:
    name: test
    timeout-minutes: 5
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Run tests
        run: pnpm test -- --run

  e2e:
    name: e2e
    timeout-minutes: 5
    permissions:
      contents: read
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.45.3-jammy
    needs:
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run Playwright tests
        run: pnpm exec playwright test
        env:
          HOME: /root

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  release:
    name: release
    timeout-minutes: 5
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - test
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: main
          fetch-depth: 0

      - name: Semantic Release
        id: semrel
        uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
          update-file: package.json
          changelog-file: CHANGELOG.md
          prepend: true

      - name: Commit changelog & package.json updates
        if: steps.semrel.outputs.version != ''
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add CHANGELOG.md package.json
          git commit -m "chore(release): ${{ steps.semrel.outputs.version }}"
          git push https://${{ secrets.SEMANTIC_RELEASE_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git main

      - name: Install pnpm
        if: steps.semrel.outputs.version != ''
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0

      - name: Setup Node
        if: steps.semrel.outputs.version != ''
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        if: steps.semrel.outputs.version != ''
        run: pnpm install

      - name: Build
        if: steps.semrel.outputs.version != ''
        env:
          NODE_ENV: "production"
        run: pnpm build

      - name: Deploy to Cloudflare Pages
        if: steps.semrel.outputs.version != ''
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy build --project-name=guitos

name: Release
on:
  push:
    branches:
      - main
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Run tests
        run: pnpm test -- --run

  e2e:
    name: e2e
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.42.1-jammy
    needs:
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.4.0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run Playwright tests
        run: pnpm exec playwright test
        env:
          HOME: /root

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  release:
    name: release
    runs-on: ubuntu-latest
    needs:
      - test
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: main
          fetch-depth: 0

      - name: Semantic Release
        uses: go-semantic-release/action@v1
        with:
          github-token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
          update-file: package.json
          changelog-file: CHANGELOG.md
          prepend: true
          hooks: exec
          custom-arguments: "--hooks-opt exec_on_success=\"git config user.name ${GITHUB_USER} && git config user.email ${GITHUB_EMAIL} && git add CHANGELOG.md package.json && git commit --message 'chore(release): {{.NewRelease.Version}}' && git push\""
        env:
          GITHUB_USER: github-actions[bot]
          GITHUB_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
